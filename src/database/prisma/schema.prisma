// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "raw_data"]
}

enum Maille {
  NAT  @map("nat")
  DEPT @map("dept")
  REG  @map("reg")

  @@map("maille")
  @@schema("public")
}

model territoire {
  code        String       @id
  nom         String
  nom_affiche String
  maille      Maille
  code_insee  String
  trace_svg   String
  code_parent String?
  chantier    chantier[]
  indicateur  indicateur[]
  zone_id     String

  @@schema("public")
}

model chantier {
  id                                 String
  nom                                String
  perimetre_ids                      String[]
  taux_avancement                    Float?
  territoire_nom                     String?
  code_insee                         String
  maille                             String
  directeurs_administration_centrale String[]
  directeurs_projet                  String[]
  ministeres                         String[]
  directions_administration_centrale String[]
  meteo                              String?    @default("NON_RENSEIGNEE")
  axe                                String     @default("non renseignée")
  ppg                                String     @default("non renseignée")
  directeurs_projet_mails            String[]
  est_barometre                      Boolean?
  est_territorialise                 Boolean?
  territoire                         territoire @relation(fields: [territoire_code], references: [code], onDelete: Cascade, onUpdate: Cascade)
  territoire_code                    String

  @@id([id, code_insee, maille])
  @@schema("public")
}

model ministere {
  id        String      @id
  nom       String
  perimetre perimetre[]
  icone     String?

  @@schema("public")
}

model perimetre {
  id              String     @id
  nom             String
  ministere       String?
  ministere_table ministere? @relation(fields: [ministere_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ministere_id    String?

  @@schema("public")
}

model indicateur {
  id                             String
  nom                            String
  chantier_id                    String
  objectif_valeur_cible          Float?
  objectif_taux_avancement       Float?
  objectif_date_valeur_cible     String?
  type_id                        String?
  type_nom                       String?
  est_barometre                  Boolean?
  est_phare                      Boolean?
  valeur_initiale                Float?
  date_valeur_initiale           DateTime?  @db.Date
  valeur_actuelle                Float?
  date_valeur_actuelle           DateTime?  @db.Date
  territoire_nom                 String?
  code_insee                     String
  maille                         String
  evolution_valeur_actuelle      Float[]
  evolution_date_valeur_actuelle DateTime[] @db.Date
  description                    String?
  source                         String?
  mode_de_calcul                 String?
  territoire                     territoire @relation(fields: [territoire_code], references: [code], onDelete: Cascade, onUpdate: Cascade)
  territoire_code                String

  @@id([id, code_insee, maille])
  @@schema("public")
}

model synthese_des_resultats {
  id               String    @id
  chantier_id      String
  maille           String
  code_insee       String
  auteur           String?
  meteo            String?
  date_meteo       DateTime? @db.Timestamp
  commentaire      String?
  date_commentaire DateTime? @db.Timestamp

  @@schema("public")
}

model axe {
  id  String @id
  nom String

  @@schema("public")
}

model ppg {
  id  String @id
  nom String

  @@schema("public")
}

model commentaire {
  id          String   @id
  chantier_id String
  type        String
  contenu     String
  date        DateTime @db.Timestamp
  auteur      String
  maille      String
  code_insee  String

  @@schema("public")
}

model mesure_indicateur {
  id           String    @id @db.Uuid
  indic_id     String
  zone_id      String
  metric_date  String
  metric_type  String
  metric_value String
  rapport_id   String    @db.Uuid
  date_import  DateTime? @default(now()) @db.Timestamptz

  @@schema("raw_data")
}

model rapport_import_mesure_indicateur {
  id               String      @id @db.Uuid
  date_creation    DateTime    @db.Timestamptz
  utilisateurEmail String
  utilisateur      utilisateur @relation(fields: [utilisateurEmail], references: [email])

  @@schema("public")
}

enum type_objectif {
  notre_ambition
  deja_fait
  a_faire

  @@schema("public")
}

model objectif {
  id          String        @id
  auteur      String
  type        type_objectif
  contenu     String
  date        DateTime      @db.Timestamp
  chantier_id String

  @@schema("public")
}

enum type_decision_strategique {
  suivi_des_decisions

  @@schema("public")
}

model decision_strategique {
  id          String                    @id
  auteur      String
  type        type_decision_strategique
  contenu     String
  date        DateTime                  @db.Timestamp
  chantier_id String

  @@schema("public")
}

model projet_structurant {
  id                       String   @id
  code                     String
  nom                      String
  direction_administration String[]
  ministeres               String[]
  chefferie_de_projet      String[]
  co_porteur               String[]

  @@schema("public")
}

model indicateur_projet_structurant {
  id                      String  @id
  nom                     String
  projet_structurant_code String
  type_id                 String?
  description             String?
  source                  String?
  mode_de_calcul          String?

  @@schema("public")
}

model objectif_projet_structurant {
  id                    String   @id
  projet_structurant_id String
  type                  String
  contenu               String
  date                  DateTime @db.Timestamp
  auteur                String?

  @@schema("public")
}

model synthese_des_resultats_projet_structurant {
  id                    String    @id
  projet_structurant_id String
  meteo                 String?
  date_meteo            DateTime? @db.Timestamp
  commentaire           String?
  date_commentaire      DateTime? @db.Timestamp
  auteur                String?

  @@schema("public")
}

model utilisateur {
  id                               String                             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                            String                             @unique
  nom                              String?
  prenom                           String?
  profil                           profil                             @relation(fields: [profilCode], references: [code], onDelete: Cascade, onUpdate: Cascade)
  profilCode                       String
  habilitation                     habilitation[]
  rapport_import_mesure_indicateur rapport_import_mesure_indicateur[]

  @@schema("public")
}

model profil {
  code                                            String        @id
  nom                                             String
  a_acces_tous_chantiers                          Boolean       @default(false)
  a_acces_tous_chantiers_territorialises          Boolean       @default(false)
  a_acces_tous_les_territoires_lecture            Boolean       @default(false)
  a_acces_tous_les_territoires_saisie_commentaire Boolean       @default(false)
  a_acces_tous_les_territoires_saisie_indicateur  Boolean       @default(false)
  utilisateur                                     utilisateur[]

  @@schema("public")
}

model habilitation {
  utilisateur   utilisateur @relation(fields: [utilisateurId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  utilisateurId String      @db.Uuid
  scope         scope       @relation(fields: [scopeCode], references: [code], onDelete: Cascade, onUpdate: Cascade)
  scopeCode     String
  territoires   String[]
  perimetres    String[]
  chantiers     String[]

  @@unique([utilisateurId, scopeCode])
  @@schema("public")
}

model scope {
  code         String         @id
  nom          String
  habilitation habilitation[]

  @@schema("public")
}
