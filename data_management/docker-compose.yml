services:
  pilote_webapp:
    image: node:18.20.2
    container_name: "pilote_webapp"
    command: sh -c "cd /app && npm install && npm run dev"
    depends_on:
      - postgres
      - pilote_dbt
      - pilote_prisma
    #ports: [ "3000:3000" ]
    env_file:
      - ./.env
      - ../.env
    volumes:
      - ../:/app
    tty: true
    labels:
      - "traefik.http.routers.pilote_webapp.rule=Host(`pilote.localhost`)"
      - "traefik.http.services.pilote_webapp.loadbalancer.server.port=3000"
  

  pilote_scripts:
    build: 
      dockerfile: data_management/Dockerfile-data
      context: ..
    depends_on:
      - postgres
    env_file:
      - .env
    volumes:
      - "${PWD}/.env:/app/data_management/.env:ro"
      - "${PWD}/data_factory/macros:/app/data_management/data_factory/macros:ro"
      - "${PWD}/data_factory/models:/app/data_management/data_factory/models:ro"
      - "${PWD}/data_factory/tests:/app/data_management/data_factory/tests:ro"
      - "${PWD}/data_factory/dbt_project.yml:/app/data_management/data_factory/dbt_project.yml:ro"
      - "${PWD}/data_factory/packages.yml:/app/data_management/data_factory/packages.yml:ro"
      - "${PWD}/profiles.yml:/app/data_management/profiles.yml:ro"
      - "${PWD}/setup.py:/app/data_management/setup.py:ro"
      - "${PWD}/input_data:/app/data_management/input_data"
      - "${PWD}/scripts:/app/data_management/scripts"
      - "${PWD}/.dlt:/app/data_management/.dlt:ro"
      - "${PWD}/dlt:/app/data_management/dlt"
      - "${PWD}/edr_target:/app/data_management/edr_target"
      - "${PWD}/../src/database/:/app/src/database:ro"
      - "${PWD}/load_ppg_metadata:/app/data_management/load_ppg_metadata:ro"
  
  pilote_dbt:
    command: "scripts/doc_dbt.sh"
    container_name: pilote_dbt
    depends_on:
      - postgres
    build: 
      dockerfile: data_management/Dockerfile-data
      context: ..
    #ports: [ "8080:8080" ]
    env_file:
      - .env
    volumes:
      - "${PWD}/.env:/app/data_management/.env:ro"
      - "${PWD}/data_factory/macros:/app/data_management/data_factory/macros:ro"
      - "${PWD}/data_factory/models:/app/data_management/data_factory/models:ro"
      - "${PWD}/data_factory/tests:/app/data_management/data_factory/tests:ro"
      - "${PWD}/data_factory/seeds:/app/data_management/data_factory/seeds:ro"
      - "${PWD}/data_factory/dbt_project.yml:/app/data_management/data_factory/dbt_project.yml:ro"
      - "${PWD}/data_factory/packages.yml:/app/data_management/data_factory/packages.yml:ro"
      - "${PWD}/profiles.yml:/app/data_management/profiles.yml:ro"
      - "${PWD}/setup.py:/app/data_management/setup.py:ro"
      - "${PWD}/scripts:/app/data_management/scripts"
      - "${PWD}/load_ppg_metadata:/app/data_management/load_ppg_metadata:ro"
    labels:
      - "traefik.http.routers.pilote_dbt.rule=Host(`pilote-dbt.localhost`)"
      - "traefik.http.services.pilote_dbt.loadbalancer.server.port=8080"


  pilote_prisma:
    command: "scripts/doc_prisma.sh"
    container_name: pilote_prisma
    depends_on:
      - postgres
    build: 
      dockerfile: data_management/Dockerfile-data
      context: ..
    env_file:
      - .env
    volumes:
      - "${PWD}/.env:/app/data_management/.env:ro"
      - "${PWD}/scripts:/app/data_management/scripts"
      - "${PWD}/../src/database/:/app/src/database:ro"
    labels:
      - "traefik.http.routers.pilote_prisma.rule=Host(`pilote-prisma.localhost`)"
      - "traefik.http.services.pilote_prisma.loadbalancer.server.port=5555"
  
  
  postgres:
    hostname: postgres
    container_name: pilote_postgres
    depends_on:
      - pilote_traefik
    image: postgres:14.6-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
    volumes: 
      - db_dbt_pilote:/var/lib/postgresql/data

  postgres_tests:
    hostname: postgres_tests
    container_name: pilote_postgres_tests
    image: postgres:14.6-alpine
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}

  pilote_traefik:
    container_name: pilote_traefik
    image: traefik:v2.10
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      #- "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


volumes:
  db_dbt_pilote:
    driver: local

# Usage :
# - (optionnel) "docker-compose build" pour construire les images
# - "docker-compose up" pour lancer la db, la doc, et la webapp
# - (optionnel) "docker-compose run pilote_scripts" pour entrer dans le container et lancer les scripts dbt via "/bin/bash scripts/<name-of-the-script>.sh"
# - (optionnel) OU "docker-compose run pilote_scripts scripts/<name-of-the-script>.sh" pour lancer le script dbt <name-of-the-script>.sh
# - (optionnel) "docker container exec -it pilote_webapp /bin/sh" pour entrer dans le container webapp et Ã©ventuellement entrer des commandes (ex: npm, yarn, ...)
